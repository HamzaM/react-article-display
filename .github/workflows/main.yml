# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps :
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: hvmzx/react-article-display:latest, hvmzx/react-article-display:${{ github.sha }}, hvmzx/react-article-display:${GITHUB_REF#refs/tags/}
          
      - name: Update Image Version in the related HelmChart values.yaml
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'charts/example-chart/values.yaml'
          propertyPath: 'image.tag'
          value: ${GITHUB_REF#refs/tags/}
          branch: master
          createPR: false
          message: 'Update Image Version to ${{ steps.image.outputs.version }}' 

      - name: Update Image Version in the related HelmChart Chart.yaml
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'charts/example-chart/Chart.yaml'
          propertyPath: 'version'
          value: ${GITHUB_REF#refs/tags/}
          branch: master
          createPR: false
          message: 'Update Image Version to ${GITHUB_REF#refs/tags/}' 

      - name: Update Image Version in the related HelmChart Chart.yaml
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'charts/example-chart/Chart.yaml'
          propertyPath: 'appVersion'
          value: ${GITHUB_REF#refs/tags/}
          branch: master
          createPR: false
          message: 'Update app Version to ${GITHUB_REF#refs/tags/}' 
